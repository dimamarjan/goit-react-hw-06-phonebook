{"version":3,"sources":["redux/types/vars.js","redux/reducers/itemReducer.js","redux/reducers/filterReducer.js","redux/reducers/index.js","redux/store/store.js","components/ContactForm/ContactForm.style.jsx","components/ContactForm/ContactForm.jsx","redux/actions/contactAction.js","components/Filter/Filter.style.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.style.jsx","views/ContactListView.style.jsx","views/ContactListView.jsx","components/ContactList/ContactList.jsx","App.js","reportWebVitals.js","index.js"],"names":["ADD_CONTACT","DEL_CONTACT","FILTER_UPDATE","initialState","itemReducer","state","action","type","payload","filter","contact","id","filterReducer","rootReducer","combineReducers","items","store","createStore","devToolsEnhancer","FormPhoneBook","styled","form","LabelForm","label","LabelText","span","InputForm","input","SubmitButton","button","ContactForm","dispatch","useDispatch","contactsArr","useSelector","useState","newContactsArr","setNewContactsArr","contactForm","nameContact","numberContact","target","contactItem","nanoid","name","toLowerCase","number","elements","value","useEffect","onSubmit","e","preventDefault","length","namesArr","map","i","numberArr","includes","newContact","pattern","title","required","LabelContacts","LabelContactsText","AccentText","InputContacts","Filter","onChange","inputFilterData","ContactListSection","ul","ContactListItem","li","ContactItemText","DelContactButton","ContactListView","data","onDelete","onClick","ContactList","filterData","filteredArr","setFilteredArr","dataToDelete","setDataToDelete","showFilteredList","setShowFilteredList","showList","setShoList","onDeleteHeandler","toString","indexOf","parseInt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcc6cd15.chunk.js","sourcesContent":["export const ADD_CONTACT = \"ADD_CONTACT\";\nexport const DEL_CONTACT = \"DEL_CONTACT\";\nexport const FILTER_UPDATE = \"FILTER_UPDATE\";","import { ADD_CONTACT, DEL_CONTACT } from 'redux/types/vars';\n\nconst initialState = [];\n\nconst itemReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_CONTACT:\n            return [...state, action.payload];\n        case DEL_CONTACT:\n            return state.filter(contact => contact.id !== action.payload);\n        default:\n            return state;\n    }\n};\n\nexport default itemReducer;\n","import { FILTER_UPDATE } from \"redux/types/vars\";\r\n\r\n\r\nconst initialState = \"\";\r\n\r\nconst filterReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FILTER_UPDATE:\r\n            return action.payload;\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default filterReducer;","import { combineReducers } from \"redux\";\nimport itemReducer from \"redux/reducers/itemReducer\";\nimport filterReducer from \"redux/reducers/filterReducer\"\n\nexport const rootReducer = combineReducers({\n    items: itemReducer,\n    filter: filterReducer\n});","import { createStore } from 'redux';\r\nimport { devToolsEnhancer } from \"redux-devtools-extension\"\r\nimport { rootReducer } from 'redux/reducers';\r\n\r\n\r\nconst store = createStore(rootReducer, devToolsEnhancer());\r\n\r\nexport default store;","import styled from \"@emotion/styled\";\r\n\r\nexport const FormPhoneBook = styled.form`\r\ndisplay: block;\r\nwidth: 320px;\r\nborder: 2px solid black;\r\npadding: 10px;\r\n\r\nmargin-left: 5px;\r\n`;\r\n\r\nexport const LabelForm = styled.label`\r\ndisplay: flex;\r\nflex-direction: column;\r\nfont-size: 20px;\r\n`;\r\n\r\nexport const LabelText = styled.span`\r\nmargin-bottom: 5px;\r\n`;\r\n\r\nexport const InputForm = styled.input`\r\nwidth: 150px;\r\nmargin-bottom: 20px;\r\n`;\r\n\r\nexport const SubmitButton = styled.button``;\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport {\r\n    FormPhoneBook,\r\n    LabelForm,\r\n    LabelText,\r\n    InputForm,\r\n    SubmitButton\r\n} from 'components/ContactForm/ContactForm.style'\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport { addContact } from 'redux/actions/contactAction';\r\nimport { nanoid } from 'nanoid'\r\n\r\n\r\n\r\n\r\nexport function ContactForm() {\r\n    const dispatch = useDispatch();\r\n    const contactsArr = useSelector((store) => store.items)\r\n    const [newContactsArr, setNewContactsArr] = useState();\r\n\r\n\r\n    const contactForm = (nameContact, numberContact, {target} ) => {\r\n        const contactItem = {\r\n            id: nanoid(),\r\n            name: nameContact.toLowerCase(),\r\n            number: numberContact\r\n        };\r\n        target.elements.name.value = \"\";\r\n        target.elements.number.value = \"\";\r\n        return contactItem;\r\n    }\r\n\r\n    \r\n    const onSubmitHandle = (e) => {\r\n        e.preventDefault();\r\n        const name = e.target.elements.name.value;\r\n        const number = e.target.elements.number.value;\r\n        if (contactsArr.length !== 0) {\r\n            const namesArr = contactsArr.map(i => i.name);\r\n            const numberArr = contactsArr.map(i => i.number);\r\n            if (namesArr.includes(name.toLowerCase()) || numberArr.includes(number)) {\r\n                e.target.elements.name.value = \"\";\r\n                e.target.elements.number.value = \"\";\r\n                return;\r\n            } else {\r\n                const newContact = contactForm(name, number, e)\r\n                setNewContactsArr(newContact);\r\n            };\r\n        } else {\r\n            const newContact = contactForm(name, number, e)\r\n            setNewContactsArr(newContact);\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (newContactsArr) {\r\n            dispatch(addContact(newContactsArr));\r\n        }\r\n    },[dispatch, newContactsArr])\r\n\r\n    return (\r\n        <div>\r\n            <FormPhoneBook onSubmit={onSubmitHandle}>\r\n                <LabelForm>\r\n                    <LabelText>Name</LabelText>\r\n                    <InputForm\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required>\r\n                    </InputForm>\r\n                </LabelForm>\r\n                <LabelForm>\r\n                    <LabelText>Number</LabelText>\r\n                    <InputForm\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required>\r\n                    </InputForm>\r\n                </LabelForm>\r\n                <SubmitButton>Add contact</SubmitButton>\r\n            </FormPhoneBook>\r\n        </div>\r\n    );\r\n};\r\n","import { ADD_CONTACT, FILTER_UPDATE, DEL_CONTACT } from 'redux/types/vars';\n\nexport const addContact = inputData => ({\n    type: ADD_CONTACT,\n    payload: inputData,\n});\n\nexport const delContact = inputData => ({\n    type: DEL_CONTACT,\n    payload: inputData,\n});\n\nexport const addFilter = inputFilterData => ({\n    type: FILTER_UPDATE,\n    payload: inputFilterData,\n});\n","import styled from \"@emotion/styled\";\r\n\r\nexport const LabelContacts = styled.label`\r\ndisplay: flex;\r\nflex-direction: column;\r\nfont-size: 20px;\r\nmargin-left: 15px;\r\n`;\r\n\r\nexport const LabelContactsText = styled.span`\r\nmargin-bottom: 10px;\r\n`;\r\n\r\nexport const AccentText = styled.span`\r\ntext-decoration: underline;\r\nfont-weight: 600;\r\n`;\r\n\r\nexport const InputContacts = styled.input`\r\nwidth: 150px;\r\n`;","import {\r\n    LabelContacts,\r\n    LabelContactsText,\r\n    InputContacts,\r\n    AccentText\r\n} from \"components/Filter/Filter.style\"\r\nimport { useDispatch } from 'react-redux';\r\nimport { addFilter } from 'redux/actions/contactAction';\r\n\r\n\r\n\r\nexport function Filter() {\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const onChangeHandle = ({ target }) => {\r\n        dispatch(addFilter(target.value))\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <LabelContacts>\r\n                <LabelContactsText>Find contacts by <AccentText>name</AccentText> or <AccentText>number</AccentText></LabelContactsText>\r\n                <InputContacts\r\n                    name=\"filter\"\r\n                    onChange={onChangeHandle} />\r\n            </LabelContacts>\r\n        </div>\r\n    );\r\n}\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ContactListSection = styled.ul`\r\nmargin-left: 15px;\r\n`;\r\n\r\nexport const ContactListItem = styled.li`\r\ntext-transform: capitalize;\r\n:not(:last-child){\r\n    margin-bottom: 15px;\r\n}\r\n`;\r\n\r\nexport const ContactItemText = styled.span``;\r\n\r\nexport const DelContactButton = styled.button`\r\nmargin-left: 10px;\r\n`;","import styled from \"@emotion/styled\";\r\n\r\nexport const ContactListItem = styled.li`\r\ntext-transform: capitalize;\r\n:not(:last-child){\r\n    margin-bottom: 15px;\r\n}\r\n`;\r\n\r\nexport const ContactItemText = styled.span``;\r\n\r\nexport const DelContactButton = styled.button`\r\nmargin-left: 10px;\r\n`;","import {\r\n    ContactListItem,\r\n    ContactItemText,\r\n    DelContactButton\r\n} from 'views/ContactListView.style'\r\n\r\nexport function ContactListView( {data, onDelete}) {\r\n    const { id, name, number } = data;\r\n    \r\n    return (\r\n        <ContactListItem >\r\n            <ContactItemText>{name}: {number}</ContactItemText>\r\n            <DelContactButton\r\n                id={id}\r\n                onClick={onDelete}\r\n            >\r\n                Delete\r\n            </DelContactButton>\r\n        </ContactListItem>\r\n    )\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { delContact } from 'redux/actions/contactAction';\r\n\r\n\r\nimport { ContactListSection } from 'components/ContactList/ContactList.style'\r\nimport { ContactListView } from 'views/ContactListView';\r\n\r\nexport function ContactList() {\r\n    const store = useSelector(store => store.items);\r\n    const filterData = useSelector(store => store.filter);\r\n    const dispatch = useDispatch();\r\n    const [filteredArr, setFilteredArr] = useState([]);\r\n    const [dataToDelete, setDataToDelete] = useState();\r\n\r\n    const [showFilteredList, setShowFilteredList] = useState(false);\r\n    const [showList, setShoList] = useState(false);\r\n\r\n    const onDeleteHeandler = ({ target }) => {\r\n        setDataToDelete(target.id);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (filterData) {\r\n            if (toString(filterData)) {\r\n                setFilteredArr([\r\n                    ...store.filter((contact => {\r\n                       return contact.name.indexOf(filterData) > -1;\r\n                    }))\r\n                ])\r\n            };\r\n            if (parseInt(filterData)){\r\n                setFilteredArr([\r\n                    ...store.filter((contact => {\r\n                       return contact.number.indexOf(filterData) > -1;\r\n                    }))\r\n                ])\r\n            };\r\n\r\n        } else {\r\n            setFilteredArr([]);\r\n        }\r\n    }, [filterData, store])\r\n\r\n\r\n    useEffect(() => {\r\n        if (filteredArr.length !== 0) {\r\n            setShoList(false);\r\n            setShowFilteredList(true);\r\n        } else {\r\n            setShowFilteredList(false);\r\n            setShoList(true);\r\n        }\r\n    }, [filteredArr.length])\r\n\r\n\r\n    useEffect(() => {\r\n        if (dataToDelete) {\r\n            dispatch(delContact(dataToDelete));\r\n        }\r\n    },[dataToDelete, dispatch])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ContactListSection>\r\n                {showList && store.map((contactItem) => (\r\n                   <ContactListView key={contactItem.id} data={contactItem} onDelete={onDeleteHeandler} />\r\n                ))}\r\n                {showFilteredList && filteredArr.map((contactItem) => (\r\n                   <ContactListView key={contactItem.id} data={contactItem} onDelete={onDeleteHeandler} />\r\n                ))}\r\n            </ContactListSection>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { ContactList } from \"components/ContactList/ContactList\";\n\nfunction App() {\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\"\nimport store from \"redux/store/store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}